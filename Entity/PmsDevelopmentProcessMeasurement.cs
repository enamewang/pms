/***********************************************************
 ** File Name : PmsDevelopmentProcessMeasurement.cs
 ** Copyright (C) 2014 Qisda Corporation. All rights reserved.
 **
 ** Creator : AIC01/Ename.Wang
 ** Create Date : 2014-01-20
 ** Modifier :
 ** Modify Date :
 **
 ** Description:
 **
 ***********************************************************/
using System;

namespace Qisda.PMS.Entity
{
	/// <summary>
	///	Generated by MyGeneration using the IBatis Object Mapping template
	/// </summary>
	[Serializable]
	public sealed class PmsDevelopmentProcessMeasurement
	{
		#region Private Members
		private bool m_IsChanged;
		private bool m_IsDeleted;
		private string m_Vid; 
		private string m_UserDept; 
		private string m_UserName; 
		private int m_CrCount; 
		private int m_LargelyAdvance; 
		private int m_Advance; 
		private int m_Normal; 
		private int m_Delay; 
		private int m_LargelyDelay; 
		private int m_LargelySurplus; 
		private int m_Surplus; 
		private int m_Balance; 
		private int m_Deficit; 
		private int m_LargelyDeficit; 
		private string m_ScheduleEvaluation; 
		private string m_CostEvaluation; 
		private DateTime m_CreateDate; 
		private string m_Creator; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public PmsDevelopmentProcessMeasurement()
		{
			m_Vid = null; 
			m_UserDept = null; 
			m_UserName = null; 
			m_CrCount = 0; 
			m_LargelyAdvance = 0; 
			m_Advance = 0; 
			m_Normal = 0; 
			m_Delay = 0; 
			m_LargelyDelay = 0; 
			m_LargelySurplus = 0; 
			m_Surplus = 0; 
			m_Balance = 0; 
			m_Deficit = 0; 
			m_LargelyDeficit = 0; 
			m_ScheduleEvaluation = null; 
			m_CostEvaluation = null; 
			m_CreateDate = new DateTime(); 
			m_Creator = null; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 有效位
		/// </summary>		
		public string Vid
		{
			get { return m_Vid; }
			set	
			{
				if( value!= null && value.Length > 2)
					throw new ArgumentOutOfRangeException("Invalid value for Vid", value, value.ToString());
				
				m_IsChanged |= (m_Vid != value); m_Vid = value;
			}
		}
			
		/// <summary>
		/// 部门
		/// </summary>		
		public string UserDept
		{
			get { return m_UserDept; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for UserDept", value, value.ToString());
				
				m_IsChanged |= (m_UserDept != value); m_UserDept = value;
			}
		}
			
		/// <summary>
		/// 姓名
		/// </summary>		
		public string UserName
		{
			get { return m_UserName; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for UserName", value, value.ToString());
				
				m_IsChanged |= (m_UserName != value); m_UserName = value;
			}
		}
			
		/// <summary>
		/// 总的CR个数
		/// </summary>		
		public int CrCount
		{
			get { return m_CrCount; }
			set { m_IsChanged |= (m_CrCount != value); m_CrCount = value; }
		}
			
		/// <summary>
		/// 大大提前的CR个数
		/// </summary>		
		public int LargelyAdvance
		{
			get { return m_LargelyAdvance; }
			set { m_IsChanged |= (m_LargelyAdvance != value); m_LargelyAdvance = value; }
		}
			
		/// <summary>
		/// 提前的CR个数
		/// </summary>		
		public int Advance
		{
			get { return m_Advance; }
			set { m_IsChanged |= (m_Advance != value); m_Advance = value; }
		}
			
		/// <summary>
		/// 正常的CR个数
		/// </summary>		
		public int Normal
		{
			get { return m_Normal; }
			set { m_IsChanged |= (m_Normal != value); m_Normal = value; }
		}
			
		/// <summary>
		/// 延迟的CR个数
		/// </summary>		
		public int Delay
		{
			get { return m_Delay; }
			set { m_IsChanged |= (m_Delay != value); m_Delay = value; }
		}
			
		/// <summary>
		/// 严重延迟的CR个数
		/// </summary>		
		public int LargelyDelay
		{
			get { return m_LargelyDelay; }
			set { m_IsChanged |= (m_LargelyDelay != value); m_LargelyDelay = value; }
		}
			
		/// <summary>
		/// 大大结余的CR个数
		/// </summary>		
		public int LargelySurplus
		{
			get { return m_LargelySurplus; }
			set { m_IsChanged |= (m_LargelySurplus != value); m_LargelySurplus = value; }
		}
			
		/// <summary>
		/// 结余的CR个数
		/// </summary>		
		public int Surplus
		{
			get { return m_Surplus; }
			set { m_IsChanged |= (m_Surplus != value); m_Surplus = value; }
		}
			
		/// <summary>
		/// 持平的CR个数
		/// </summary>		
		public int Balance
		{
			get { return m_Balance; }
			set { m_IsChanged |= (m_Balance != value); m_Balance = value; }
		}
			
		/// <summary>
		/// 超支的CR个数
		/// </summary>		
		public int Deficit
		{
			get { return m_Deficit; }
			set { m_IsChanged |= (m_Deficit != value); m_Deficit = value; }
		}
			
		/// <summary>
		/// 严重超支的CR个数
		/// </summary>		
		public int LargelyDeficit
		{
			get { return m_LargelyDeficit; }
			set { m_IsChanged |= (m_LargelyDeficit != value); m_LargelyDeficit = value; }
		}
			
		/// <summary>
		/// 进度评价
		/// </summary>		
		public string ScheduleEvaluation
		{
			get { return m_ScheduleEvaluation; }
			set	
			{
				if( value!= null && value.Length > 255)
					throw new ArgumentOutOfRangeException("Invalid value for ScheduleEvaluation", value, value.ToString());
				
				m_IsChanged |= (m_ScheduleEvaluation != value); m_ScheduleEvaluation = value;
			}
		}
			
		/// <summary>
		/// 成本评价
		/// </summary>		
		public string CostEvaluation
		{
			get { return m_CostEvaluation; }
			set	
			{
				if( value!= null && value.Length > 255)
					throw new ArgumentOutOfRangeException("Invalid value for CostEvaluation", value, value.ToString());
				
				m_IsChanged |= (m_CostEvaluation != value); m_CostEvaluation = value;
			}
		}
			
		/// <summary>
		/// 创建时间
		/// </summary>		
		public DateTime CreateDate
		{
			get { return m_CreateDate; }
			set { m_IsChanged |= (m_CreateDate != value); m_CreateDate = value; }
		}
			
		/// <summary>
		/// 创建人
		/// </summary>		
		public string Creator
		{
			get { return m_Creator; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for Creator", value, value.ToString());
				
				m_IsChanged |= (m_Creator != value); m_Creator = value;
			}
		}
			
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsChanged
		{
			get { return m_IsChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsDeleted
		{
			get { return m_IsDeleted; }
		}
		
		#endregion 
		
		
		#region Public Functions
		
		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public void MarkAsDeleted()
		{
			m_IsDeleted = true;
			m_IsChanged = true;
		}
		
		#endregion
		
		
	}
}
